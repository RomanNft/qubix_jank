services:
  db:
    image: roman2447/db-facebook:latest
    environment:
      POSTGRES_DB: facebook
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 50s
      timeout: 20s
      retries: 20
    restart: always

  migration:
    image: roman2447/migration:latest
    build:
      context: ./facebook-server
      dockerfile: Dockerfile_MIGRATION
    volumes:
      - ./facebook-server:/app
    working_dir: /app/Facebook_Api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    command: >
      sh -c '/app/wait-for-postgres.sh db /app/apply-migrations.sh'
    restart: on-failure

  facebook-server:
    build:
      context: ./facebook-server
    image: roman2447/facebook-server:latest
    ports:
      - "5181:8080"
    depends_on:
      migration:
        condition: service_completed_successfully
    volumes:
      - ./facebook-server/Facebook_Api/images/avatars:/app/images/avatars
      - ./facebook-server/Facebook_Api/images/coverPhotos:/app/images/coverPhotos
      - ./facebook-server/Facebook_Api/images/stories:/app/images/stories
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    command: >
      sh -c "dotnet Facebook_Api.dll"
    restart: on-failure

  facebook-client:
    build:
      context: ./facebook-client
    image: roman2447/facebook-client:latest
    ports:
      - "5173:80"
    depends_on:
      - facebook-server
    restart: on-failure

volumes:
  postgres_data:
